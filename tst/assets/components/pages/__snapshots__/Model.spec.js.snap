// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Model /> should render Model page static content 1`] = `
Array [
  <article
    className="section is-fullheight is-medium"
  >
    <div
      className="container content"
    >
      <h1>
        Model JSON Serialization
      </h1>
      <p>
        Hive
        <sup>
          io
        </sup>
         uses the JSON Schema and Flux Standard Action specifications to automatically serialize and validate your data Models for network transport. Combined they become the standard format to transfer data to nearly any device or system. Complete with versioning and a schema registry, Hive
        <sup>
          io
        </sup>
         provides a universal application framework that can seamlessly run in a variety of clients and server environments.
      </p>
      <dl>
        <dt>
          <em>
            <strong>
              JSON Schema
            </strong>
          </em>
        </dt>
        <dd>
          The 
          <a
            href="http://json-schema.org/"
            rel="noopener noreferrer"
            target="_blank"
          >
            JSON Schema
          </a>
           specification allows us to define a transport schema to validate incoming data. This can also be used to document your API with a definition that can be operated against. The specification defines that schemas can be hosted, giving you the ability to serve schemas through a static web server schema registry. You can use this to version your transport schemas and host them internally, externally, or both if you prefer.
        </dd>
        <dt>
          <em>
            <strong>
              Flux Standard Action
            </strong>
          </em>
        </dt>
        <dd>
          The 
          <a
            href="https://github.com/redux-utilities/flux-standard-action"
            rel="noopener noreferrer"
            target="_blank"
          >
            Flux Standard Action
          </a>
           specification allows us to define a lightweight, network data payload used to build your services. Minimally, this provides our network payload structure with explicit support for typed data definintions. Payload objects are defined and validated by their associated JSON Schemas.
        </dd>
      </dl>
      <p>
        These Actors and Models would then be packaged up and built into your client side domain logic or in the growing list of Docker images supporting the infrastructure layer of the Hive
        <sup>
          io
        </sup>
         Framework.
      </p>
    </div>
  </article>,
  <section
    className="hero is-small is-hive"
  >
    <div
      className="hero-body has-text-centered"
    >
      <a
        href="/overview"
        onClick={[Function]}
      >
        <svg
          height="48"
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z"
          />
        </svg>
      </a>
      <nav
        aria-label="breadcrumbs"
        className="breadcrumb has-bullet-separator is-hidden-touch"
      >
        <ul>
          <li>
            <a
              href="/overview"
              onClick={[Function]}
            >
              Overview
            </a>
          </li>
          <li
            className="is-active"
          >
            <a
              aria-current="page"
              href="/model"
              onClick={[Function]}
            >
              Data Model
            </a>
          </li>
          <li>
            <a
              href="/domain"
              onClick={[Function]}
            >
              Domain Logic
            </a>
          </li>
          <li>
            <a
              href="/infrastructure"
              onClick={[Function]}
            >
              Infrastructure
            </a>
          </li>
        </ul>
      </nav>
      <a
        href="/domain"
        onClick={[Function]}
      >
        <svg
          height="48"
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z"
          />
        </svg>
      </a>
    </div>
  </section>,
]
`;
